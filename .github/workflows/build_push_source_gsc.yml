name: Build and Push Airbyte Source Google Search Console

on:
  workflow_dispatch:  # Permette l'esecuzione manuale
    inputs:
      tag:
        description: 'Tag per immagine Docker (opzionale)'
        required: false
        default: 'latest'
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/source-google-search-console

jobs:
  build-and-push:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install airbyte-ci
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          make tools.airbyte-ci.install
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
      - name: Verify airbyte-ci installation
        run: |
          which airbyte-ci
          airbyte-ci --version
          
      - name: Change to connector directory
        run: cd airbyte-integrations/connectors/source-google-search-console
        
      - name: Build connector with airbyte-ci
        working-directory: airbyte-integrations/connectors/source-google-search-console
        run: |
          airbyte-ci connectors --name=source-google-search-console build
          
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ github.event.inputs.tag || 'latest' }}
            type=sha,prefix={{branch}}-
            
      - name: Find and tag built Docker image
        run: |
          # Trova l'immagine costruita da airbyte-ci
          BUILT_IMAGE=$(docker images --format "table {{.Repository}}:{{.Tag}}" | grep source-google-search-console | head -1 | awk '{print $1}')
          
          if [ -z "$BUILT_IMAGE" ]; then
            echo "Errore: Nessuna immagine trovata per source-google-search-console"
            exit 1
          fi
          
          echo "Immagine trovata: $BUILT_IMAGE"
          
          # Tag dell'immagine per il registry GitHub
          NEW_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag || 'latest' }}"
          docker tag "$BUILT_IMAGE" "$NEW_TAG"
          
          echo "Immagine taggata come: $NEW_TAG"
          echo "IMAGE_TAG=$NEW_TAG" >> $GITHUB_ENV
          
      - name: Push Docker image to GitHub Container Registry
        run: |
          docker push ${{ env.IMAGE_TAG }}
          
      - name: Output image details
        run: |
          echo "✅ Immagine pubblicata con successo!"
          echo "📦 Registry: ${{ env.REGISTRY }}"
          echo "🏷️ Tag: ${{ env.IMAGE_TAG }}"
          echo "🔗 URL: https://github.com/${{ github.repository }}/pkgs/container/source-google-search-console"
